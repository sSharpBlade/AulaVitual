/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package IGU.Docente;

import Logica.ArchivosPDF.PDF;
import Logica.ArchivosPDF.TareasPDF;
import Logica.Usuarios.Acciones.Docente;
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Edwin Lopez
 */
public class pTareas extends javax.swing.JPanel {

    /**
     * Creates new form pTareas
     */
    private String ruta_archivo = "";
    private Logica.ArchivosPDF.PDF pdf = new PDF();
    private Logica.ArchivosPDF.TareasPDF tarea = new TareasPDF();
    private Docente doc = new Docente();
    private DefaultComboBoxModel modelo = new DefaultComboBoxModel();
    private DefaultComboBoxModel modelo1 = new DefaultComboBoxModel();
    private int id;
    private int ida;
    private int idc;

    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public int getIda() {
        return this.ida;
    }

    public void setIda(int ida) {
        this.ida = ida;
    }

    public int getIdc() {
        return this.idc;
    }

    public void setIdc(int idc) {
        this.idc = idc;
    }

    public pTareas(int idU) {
        initComponents();
        this.setId(idU);
        pdf.tareasPorAsignar(tbTareas, this.getId());
        this.asignaturas();
    }

    private void asignaturas() {
        cbAsignaturas.setModel(modelo);
        modelo.removeAllElements();
        for (int i = 0; i < doc.getAsignaturas(this.getId()).size(); i++) {
            modelo.addElement(doc.getAsignaturas(this.getId()).get(i));
        }
    }

    public void cursos() {
        cbCursos.setModel(modelo1);
        modelo1.removeAllElements();
        this.setIda(doc.getIdTablas("asignaturas", cbAsignaturas.getSelectedItem().toString()));
        for (int i = 0; i < doc.getCursos(this.getId(), this.getIda()).size(); i++) {
            modelo1.addElement(doc.getCursos(this.getId(), this.getIda()).get(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnSeleccionar = new javax.swing.JButton();
        txtTitulo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnCrear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTareas = new javax.swing.JTable();
        cbCursos = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnAsignar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbAsignaturas = new javax.swing.JComboBox<>();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(772, 546));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Crear Tarea"));

        jLabel1.setText("Titulo:");

        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        jLabel2.setText("Descripcion:");

        jLabel3.setText("Archivo:");

        btnCrear.setText("Crear tarea");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane2.setViewportView(txtDescripcion);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSeleccionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCrear)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTitulo)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE))
                        .addGap(55, 55, 55))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeleccionar)
                    .addComponent(jLabel3)
                    .addComponent(btnCrear))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 750, 240));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Asignar Tarea"));

        tbTareas = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tbTareas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbTareas.getTableHeader().setResizingAllowed(false);
        tbTareas.getTableHeader().setReorderingAllowed(false);
        tbTareas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTareasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbTareas);

        cbCursos.setEnabled(false);
        cbCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCursosActionPerformed(evt);
            }
        });

        jLabel4.setText("Cursos");

        btnAsignar.setText("Asignar");
        btnAsignar.setEnabled(false);
        btnAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarActionPerformed(evt);
            }
        });

        jLabel5.setText("Asignatura");

        cbAsignaturas.setEnabled(false);
        cbAsignaturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAsignaturasActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAsignar))
                    .addComponent(cbAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCursos, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(43, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnAsignar)
                    .addComponent(btnModificar))
                .addContainerGap())
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 260, -1, 250));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        if (txtTitulo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Llene el campo titulo y seleccione un archivo");
        } else {
            File ruta = new File(ruta_archivo);
            crearTarea(txtTitulo.getText(), txtDescripcion.getText(), ruta);
            this.setRuta_archivo("");
            txtTitulo.setText("");
            txtDescripcion.setText("");
            pdf.tareasPorAsignar(tbTareas, this.getId());
            JOptionPane.showMessageDialog(null, "Tarea creada con exito");
        }
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        seleccionar_pdf();
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void btnAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarActionPerformed
        if (!doc.getCursos(this.getId(), this.getIda()).isEmpty()) {
            this.setIdc(this.doc.getIdTablas("cursos", cbCursos.getSelectedItem().toString()));
            Integer a = new Docente().getValido(tarea.getIdT(), this.getIda());
            if (a == null) {
                Date fechaHoraActual = new Date();
                SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
                String fechaHoraFormateada = formato.format(fechaHoraActual);
                doc.setTablaIntermedia(tarea.getIdT(), this.getIda(), fechaHoraFormateada);
                doc.setTareasForAsignatura(tarea.getIdT(), this.getIdc(), this.getIda());
                JOptionPane.showMessageDialog(null, "Tarea asignada con exito");
            } else {
                JOptionPane.showMessageDialog(null, "La tarea ya fue asignada anteriormente a esta asignatura de este curso");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No puede asignar debido que la asignatura \nseleccionada no tiene un curso definido.");
        }
        limpiar();
    }//GEN-LAST:event_btnAsignarActionPerformed

    private void tbTareasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTareasMouseClicked
        cbAsignaturas.setEnabled(true);
        cbCursos.setEnabled(true);
        btnAsignar.setEnabled(true);
        btnModificar.setEnabled(true);
        btnCrear.setEnabled(false);
        btnEliminar.setEnabled(true);
        int fila = tbTareas.getSelectedRow();
        tarea.setIdT(tbTareas.getValueAt(fila, 3).toString());
        txtTitulo.setText(tbTareas.getValueAt(fila, 0).toString());
        txtDescripcion.setText(tbTareas.getValueAt(fila, 1).toString());
        int column = tbTareas.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY() / tbTareas.getRowHeight();
        if (row < tbTareas.getRowCount() && row >= 0 && column < tbTareas.getColumnCount() && column >= 0) {
            Object value = tbTareas.getValueAt(row, column);
            if (value instanceof JButton) {
                ((JButton) value).doClick();
                JButton boton = (JButton) value;

                if (boton.getText().equals("Vacio")) {
                    JOptionPane.showMessageDialog(null, "No hay archivo");
                } else {
                    PDF pd = new PDF();
                    pd.abrirArchivoAsignado(tbTareas.getValueAt(fila, 3).toString());
                    try {
                        Desktop.getDesktop().open(new File("new.pdf"));
                    } catch (Exception ex) {
                    }
                }

            }
        }
    }//GEN-LAST:event_tbTareasMouseClicked

    private void cbAsignaturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAsignaturasActionPerformed
        this.cursos();
    }//GEN-LAST:event_cbAsignaturasActionPerformed

    private void cbCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCursosActionPerformed

    }//GEN-LAST:event_cbCursosActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (0 == JOptionPane.showConfirmDialog(null, "Estas seguro de realizar esta accion, no habra marcha atras")) {
            doc.eliminarTarea(tarea.getIdT());
        }
        limpiar();
        pdf.tareasPorAsignar(tbTareas, this.getId());
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (txtTitulo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo Titulo no debe estar vacio");
        } else {
            String nombre = txtTitulo.getText();
            String des = txtDescripcion.getText();
            int fila = tbTareas.getSelectedRow();
            String tiempo = tbTareas.getValueAt(fila, 3).toString();
            File ruta = new File(ruta_archivo);
            if (nombre.length() != 0 && ruta_archivo.length() != 0) {
                modificarTarea(nombre, des, ruta, this.getId(), tiempo);
            } else if (ruta_archivo.length() == 0) {
                modificarTarea(nombre, des, this.getId(), tiempo);
            }
            pdf.tareasPorAsignar(tbTareas, this.getId());
            JOptionPane.showMessageDialog(null, "Tarea modificada con exito");

            ruta_archivo = "";
        }
        limpiar();
    }//GEN-LAST:event_btnModificarActionPerformed

    public void modificarTarea(String titulo, String descripcion, int id, String tiempo) {
        tarea.setTitulo(titulo);
        tarea.setDescripcion(descripcion);
        pdf.modificarTareaSimple(tarea.getTitulo(), tarea.getDescripcion(), id, tiempo);
    }

    public void modificarTarea(String titulo, String descripcion, File archivo, int id, String tiempo) {
        tarea.setTitulo(titulo);
        tarea.setDescripcion(descripcion);
        try {
            byte[] pdfM = new byte[(int) archivo.length()];
            InputStream input = new FileInputStream(archivo);
            input.read(pdfM);
            tarea.setArchivoAsignado(pdfM);
        } catch (IOException ex) {
            tarea.setArchivoAsignado(null);
            System.out.println("Error al agregar archivo pdf " + ex.getMessage());
        }
        pdf.modificarTarea(tarea.getTitulo(), tarea.getDescripcion(), tarea.getArchivoAsignado(), id, tiempo);
    }

    public void crearTarea(String titulo, String descripcion, File ruta) {
        tarea.setTitulo(titulo);
        tarea.setDescripcion(descripcion);
        try {
            byte[] pdfb = new byte[(int) ruta.length()];
            InputStream input = new FileInputStream(ruta);
            input.read(pdfb);
            tarea.setArchivoAsignado(pdfb);
        } catch (IOException e) {
            tarea.setArchivoAsignado(null);
            System.out.println("Error en el archivo: " + e.getMessage());
        }
        Date fechaHoraActual = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        String fechaHoraFormateada = formato.format(fechaHoraActual);

        pdf.crearTarea(tarea.getTitulo(), tarea.getDescripcion(), tarea.getArchivoAsignado(), this.getId(), fechaHoraFormateada);
    }

    public void seleccionar_pdf() {
        JFileChooser j = new JFileChooser();
        FileNameExtensionFilter fi = new FileNameExtensionFilter("pdf", "pdf");
        j.setFileFilter(fi);
        int se = j.showOpenDialog(this);
        if (se == 0) {
            this.setRuta_archivo(j.getSelectedFile().getAbsolutePath());
        }
    }

    public String getRuta_archivo() {
        return this.ruta_archivo;
    }

    public void setRuta_archivo(String ruta_archivo) {
        this.ruta_archivo = ruta_archivo;
    }
    
    public void limpiar(){
        txtTitulo.setText("");
        txtDescripcion.setText("");
        ruta_archivo="";
        btnAsignar.setEnabled(false);
        btnCrear.setEnabled(true);
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
        cbAsignaturas.setEnabled(false);
        cbCursos.setEnabled(false);
        pdf.tareasPorAsignar(tbTareas, this.getId());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsignar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JComboBox<String> cbAsignaturas;
    private javax.swing.JComboBox<String> cbCursos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbTareas;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
