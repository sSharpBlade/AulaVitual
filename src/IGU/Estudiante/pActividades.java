/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package IGU.Estudiante;

import Logica.ArchivosPDF.PDF;
import Logica.ArchivosPDF.TareasPDF;
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Edwin Lopez
 */
public class pActividades extends javax.swing.JPanel {

    /**
     * Creates new form pActividades
     */
    private String ruta_archivo = "";
    private PDF pdfT = new PDF();
    private int idU;
    private String tiempoAsignado;
    private Logica.ArchivosPDF.TareasPDF ta = new TareasPDF();

    public int getIdU() {
        return this.idU;
    }

    public void setIdU(int idU) {
        this.idU = idU;
    }

    public String getRuta_archivo() {
        return this.ruta_archivo;
    }

    public void setRuta_archivo(String ruta_archivo) {
        this.ruta_archivo = ruta_archivo;
    }

    public String getTiempoAsignado() {
        return this.tiempoAsignado;
    }

    public void setTiempoAsignado(String tiempoAsignado) {
        this.tiempoAsignado = tiempoAsignado;
    }

    public pActividades(int id) {
        initComponents();
        this.setIdU(id);
        pdfT.tareasEstudiante(tbTareas, id, 0);
        this.btnPendiente.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbTareas = new javax.swing.JTable();
        lbTarea = new javax.swing.JLabel();
        lbDescripcion = new javax.swing.JLabel();
        btnHecho = new javax.swing.JButton();
        btnPendiente = new javax.swing.JButton();
        btnTarea = new javax.swing.JButton();
        lbTitulo = new javax.swing.JLabel();
        lbTexto = new javax.swing.JLabel();
        btnSeleccionar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbTiempo2 = new javax.swing.JLabel();
        lbTiempo1 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(772, 546));
        setPreferredSize(new java.awt.Dimension(772, 546));

        tbTareas = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tbTareas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTareas.getTableHeader().setResizingAllowed(false);
        tbTareas.getTableHeader().setReorderingAllowed(false);
        tbTareas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTareasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbTareas);
        if (tbTareas.getColumnModel().getColumnCount() > 0) {
            tbTareas.getColumnModel().getColumn(0).setResizable(false);
            tbTareas.getColumnModel().getColumn(1).setResizable(false);
            tbTareas.getColumnModel().getColumn(2).setResizable(false);
            tbTareas.getColumnModel().getColumn(3).setResizable(false);
            tbTareas.getColumnModel().getColumn(4).setResizable(false);
        }

        lbTarea.setText("Tarea");

        lbDescripcion.setText("Descripcion");

        btnHecho.setText("Realizados");
        btnHecho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHechoActionPerformed(evt);
            }
        });

        btnPendiente.setText("Pendientes");
        btnPendiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPendienteActionPerformed(evt);
            }
        });

        btnTarea.setText("Subir Tarea");
        btnTarea.setEnabled(false);
        btnTarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTareaActionPerformed(evt);
            }
        });

        lbTexto.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.setEnabled(false);
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        lbTiempo2.setText("Tiempo de subida:");

        lbTiempo1.setText("Tiempo de asignacion:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTiempo2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbTiempo1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(0, 154, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lbTiempo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbTiempo2)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbTarea, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbDescripcion, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHecho)
                        .addGap(18, 18, 18)
                        .addComponent(btnPendiente)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(btnSeleccionar)
                            .addComponent(btnTarea))
                        .addContainerGap())))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSeleccionar)
                        .addGap(18, 18, 18)
                        .addComponent(btnTarea))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(lbTarea)
                            .addComponent(lbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbDescripcion)
                            .addComponent(lbTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHecho)
                            .addComponent(btnPendiente))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        seleccionar_pdf();
        btnTarea.setEnabled(true);
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void btnHechoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHechoActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbTareas.getModel();
        model.setRowCount(0);
        pdfT.tareasEstudiante(tbTareas, this.getIdU(), 1);
        this.btnHecho.setEnabled(false);
        this.btnPendiente.setEnabled(true);
        cancelar();
    }//GEN-LAST:event_btnHechoActionPerformed

    private void btnPendienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPendienteActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbTareas.getModel();
        model.setRowCount(0);
        pdfT.tareasEstudiante(tbTareas, this.getIdU(), 0);
        this.btnPendiente.setEnabled(false);
        this.btnHecho.setEnabled(true);
        cancelar();
    }//GEN-LAST:event_btnPendienteActionPerformed

    private void tbTareasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTareasMouseClicked
        int fila = tbTareas.getSelectedRow();
        ta.setIdT(tbTareas.getValueAt(fila, 5).toString());
        this.setTiempoAsignado(tbTareas.getValueAt(fila, 6).toString());
        if (!btnPendiente.isEnabled()) {
            btnSeleccionar.setEnabled(true);
        }
        lbTitulo.setText(tbTareas.getValueAt(fila, 0).toString());
        lbTexto.setText("<html>" + tbTareas.getValueAt(fila, 1).toString() + "</html>");
        lbTiempo1.setText("Tiempo de asignacion: " + tbTareas.getValueAt(fila, 6).toString());
        lbTiempo2.setText("Tiempo de subida: " + tbTareas.getValueAt(fila, 7).toString());
        int column = tbTareas.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY() / tbTareas.getRowHeight();
        if (row < tbTareas.getRowCount() && row >= 0 && column < tbTareas.getColumnCount() && column >= 0) {
            Object value = tbTareas.getValueAt(row, column);
            if (value instanceof JButton) {
                ((JButton) value).doClick();
                JButton boton = (JButton) value;

                if (boton.getText().equals("Vacio")) {
                    JOptionPane.showMessageDialog(null, "No hay archivo");
                } else {
                    PDF pd = new PDF();
                    if (column == 3) {
                        pd.abrirArchivoTarea(tbTareas.getValueAt(fila, 7).toString());
                    } else if (column == 2) {
                        pd.abrirArchivoAsignado(tbTareas.getValueAt(fila, 5).toString());
                    }
                    try {
                        Desktop.getDesktop().open(new File("new.pdf"));
                    } catch (Exception ex) {
                    }
                }

            }
        }
    }//GEN-LAST:event_tbTareasMouseClicked

    private void btnTareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTareaActionPerformed
        File ruta = new File(this.getRuta_archivo());
        if (this.getRuta_archivo().trim().length() != 0) {
            modificar_pdf(ta.getIdT(), ruta);
            btnTarea.setEnabled(false);
            btnSeleccionar.setEnabled(false);
            DefaultTableModel model = (DefaultTableModel) tbTareas.getModel();
            model.setRowCount(0);
            pdfT.tareasEstudiante(tbTareas, this.getIdU(), 0);
            JOptionPane.showMessageDialog(null, "Tarea subida con exito");
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione el archivo");
        }
        this.setRuta_archivo("");
        this.cancelar();
    }//GEN-LAST:event_btnTareaActionPerformed

    public void seleccionar_pdf() {
        JFileChooser j = new JFileChooser();
        FileNameExtensionFilter fi = new FileNameExtensionFilter("pdf", "pdf");
        j.setFileFilter(fi);
        int se = j.showOpenDialog(this);
        if (se == 0) {
            this.setRuta_archivo(j.getSelectedFile().getAbsolutePath());
            btnTarea.setEnabled(true);
        } else {
        }
    }

    public void modificar_pdf(int id, File ruta) {
        PDF pa = new PDF();
        try {
            byte[] pdf = new byte[(int) ruta.length()];
            InputStream input = new FileInputStream(ruta);
            input.read(pdf);
            ta.setArchivoTarea(pdf);
        } catch (IOException ex) {
            ta.setArchivoTarea(null);
            System.out.println("Error al agregar archivo pdf " + ex.getMessage());
        }
        Date fechaHoraActual = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        String fechaHoraFormateada = formato.format(fechaHoraActual);
        pa.subirTarea(id, ta.getArchivoTarea(), this.getIdU(), fechaHoraFormateada, this.getTiempoAsignado());
    }

    public void cancelar() {
        lbTitulo.setText("");
        lbTexto.setText("");
        lbTiempo1.setText("Tiempo de asignacion:");
        lbTiempo2.setText("Tiempo de subida:");
        btnSeleccionar.setName("Seleccionar");
        btnSeleccionar.setEnabled(false);
        btnTarea.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHecho;
    private javax.swing.JButton btnPendiente;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JButton btnTarea;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDescripcion;
    private javax.swing.JLabel lbTarea;
    private javax.swing.JLabel lbTexto;
    private javax.swing.JLabel lbTiempo1;
    private javax.swing.JLabel lbTiempo2;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JTable tbTareas;
    // End of variables declaration//GEN-END:variables
}
